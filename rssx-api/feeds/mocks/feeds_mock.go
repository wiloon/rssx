// Code generated by MockGen. DO NOT EDIT.
// Source: feeds/feeds.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"
	feed "rssx/feed"

	gomock "github.com/golang/mock/gomock"
)

// MockRssFeeds is a mock of RssFeeds interface.
type MockRssFeeds struct {
	ctrl     *gomock.Controller
	recorder *MockRssFeedsMockRecorder
}

// MockRssFeedsMockRecorder is the mock recorder for MockRssFeeds.
type MockRssFeedsMockRecorder struct {
	mock *MockRssFeeds
}

// NewMockRssFeeds creates a new mock instance.
func NewMockRssFeeds(ctrl *gomock.Controller) *MockRssFeeds {
	mock := &MockRssFeeds{ctrl: ctrl}
	mock.recorder = &MockRssFeedsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRssFeeds) EXPECT() *MockRssFeedsMockRecorder {
	return m.recorder
}

// GetAllFeedList mocks base method.
func (m *MockRssFeeds) GetAllFeedList() []*feed.Feed {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllFeedList")
	ret0, _ := ret[0].([]*feed.Feed)
	return ret0
}

// GetAllFeedList indicates an expected call of GetAllFeedList.
func (mr *MockRssFeedsMockRecorder) GetAllFeedList() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllFeedList", reflect.TypeOf((*MockRssFeeds)(nil).GetAllFeedList))
}
